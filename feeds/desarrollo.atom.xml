<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>pataliebre.net</title><link href="http://pataliebre.net" rel="alternate"></link><link href="http://pataliebre.net/feeds/desarrollo.atom.xml" rel="self"></link><id>http://pataliebre.net</id><updated>2012-05-04T00:00:00+02:00</updated><entry><title>Control de concurrencia usando D-Bus</title><link href="http://pataliebre.net/control-de-concurrencia-usando-d-bus.html" rel="alternate"></link><updated>2012-05-04T00:00:00+02:00</updated><author><name>David Castellanos</name></author><id>http://pataliebre.net/control-de-concurrencia-usando-d-bus.html</id><summary type="html">&lt;p&gt;Un problema frecuente es cómo impedir que un programa se ejecute dos o más
veces de forma concurrente. Uno de los mecanismos más utilizados para afrontar
este problema es el conocido como &lt;a href="http://en.wikipedia.org/wiki/File_locking"&gt;file locking&lt;/a&gt;. En un proyecto hemos
utilizado &lt;a href="http://en.wikipedia.org/wiki/DBus"&gt;D-Bus&lt;/a&gt; para implementar un mecanismo similar.&lt;/p&gt;
&lt;p&gt;D-Bus es un sistema de bus de mensajes, una forma sencilla para que las
aplicaciones se comuniquen entre sí. De forma muy resumida (más información en
la web del &lt;a href="http://www.freedesktop.org/wiki/Software/dbus"&gt;proyecto D-Bus&lt;/a&gt;), cuando un usuario inicia una sesión gráfica en
el sistema tiene a su disposición un bus del sistema y un bus del usuario
ligado a su sesión. Un programa en ejecución se puede registrar en uno de estos
buses para ofrecer uno o más servicios, identificados unívocamente con un
identificador asignado por D-Bus (p.e. &lt;code&gt;:34-907&lt;/code&gt;) y un nombre &lt;em&gt;conocido&lt;/em&gt;
elegido por el programa (p.e. &lt;code&gt;es.foo.Bar&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Puesto que sólo puede haber un único servicio en un bus con el mismo nombre, es
sencillo idear un mecanismo de control de concurrencia. Consistiría básicamente
en consultar si existe un servicio en el bus de sesión con un determinado
nombre. Un ejemplo sencillo implementado en Python es el siguiente:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# dbus-singleton-example.py&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gobject&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dbus&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dbus.mainloop.glib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dbus.service&lt;/span&gt;

&lt;span class="n"&gt;BUS_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;es.foo.Bar&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DBusSingleton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SessionBus&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name_has_owner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BUS_NAME&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BUS_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/es/foo/bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Adquired D-Bus name: &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;BUS_NAME&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Failed to request D-Bus name: &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;BUS_NAME&lt;/span&gt;
            &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DBusGMainLoop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;set_as_default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;singleton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DBusSingleton&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gobject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MainLoop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al ejecutarlo de forma concurrente &lt;em&gt;n&lt;/em&gt; veces se obtiene la salida:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="k"&gt;for &lt;/span&gt;i in &lt;span class="o"&gt;{&lt;/span&gt;1..5&lt;span class="o"&gt;}&lt;/span&gt;; &lt;span class="k"&gt;do &lt;/span&gt;python dbus-concurrenty-example.py &amp;amp; &lt;span class="k"&gt;done&lt;/span&gt;
Adquired D-Bus name: &lt;span class="s2"&gt;&amp;quot;es.foo.Bar&amp;quot;&lt;/span&gt;
Failed to request D-Bus name: &lt;span class="s2"&gt;&amp;quot;es.foo.Bar&amp;quot;&lt;/span&gt;
Failed to request D-Bus name: &lt;span class="s2"&gt;&amp;quot;es.foo.Bar&amp;quot;&lt;/span&gt;
Failed to request D-Bus name: &lt;span class="s2"&gt;&amp;quot;es.foo.Bar&amp;quot;&lt;/span&gt;
Failed to request D-Bus name: &lt;span class="s2"&gt;&amp;quot;es.foo.Bar&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="dbus"></category><category term="concurrencia"></category></entry><entry><title>Extraer cadenas de un fichero .ui de gtk-builder con intltool</title><link href="http://pataliebre.net/extraer-cadenas-de-un-fichero-ui-de-gtk-builder-con-intltool.html" rel="alternate"></link><updated>2012-04-26T00:00:00+02:00</updated><author><name>David Castellanos</name></author><id>http://pataliebre.net/extraer-cadenas-de-un-fichero-ui-de-gtk-builder-con-intltool.html</id><summary type="html">&lt;p&gt;Tenemos entre manos un proyecto en el que utilizamos Glade para la creación de
la interfaz de usuario; es muy cómodo porque crea una serie de ficheros XML que
describen la UI del programa, en lugar de crearla programáticamente. Hasta ahora
usábamos &lt;code&gt;libglade&lt;/code&gt; para cargar estos ficheros, pero como esta librería &lt;a href="http://mail.gnome.org/archives/devel-announce-list/2009-May/msg00003.html"&gt;está
deprecada desde el año 2009&lt;/a&gt;, estamos trabajando en reemplazarla con
&lt;code&gt;gtk-builder&lt;/code&gt; del proyecto GTK.&lt;/p&gt;
&lt;p&gt;Es un proceso aburrido y tedioso más que difícil, pero nos hemos encontrado con
un pequeño problema. Estamos usando Autotools en el proyecto, e &lt;code&gt;intltool&lt;/code&gt; no
es capaz de extraer cadenas de los ficheros con extensión &lt;code&gt;.ui&lt;/code&gt; de
&lt;code&gt;gtk-builder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La solución para este problema es sencilla y la encontramos en un documento
llamado &lt;a href="http://live.gnome.org/GnomeGoals/RemoveLibGladeUseGtkBuilder"&gt;GNOME Goal: Use GtkBuilder instead of libglade&lt;/a&gt;. Consiste en
indicar a &lt;code&gt;intltool&lt;/code&gt; que estos ficheros son de tipo &lt;code&gt;gettext/glade&lt;/code&gt;. Basta con
editar el fichero &lt;code&gt;POTFILES.in&lt;/code&gt; y añadir un prefijo a cada una de las líneas
donde aparezca un fichero &lt;code&gt;.ui&lt;/code&gt; de la siguiente manera:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;[type: gettext/glade]data/preferences.ui
&lt;/pre&gt;&lt;/div&gt;</summary><category term="gtk"></category><category term="autotools"></category><category term="intltool"></category></entry></feed>