<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>pataliebre.net</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2013-05-21T00:00:00+02:00</updated><entry><title>Solucionar cuelgue de Eclipse en Ubuntu 13.04 al mostrar una sugerencia de autocompletado</title><link href="/solucionar-cuelgue-de-eclipse-en-ubuntu-1304-al-mostrar-una-sugerencia-de-autocompletado.html" rel="alternate"></link><updated>2013-05-21T00:00:00+02:00</updated><author><name>david</name></author><id>tag:,2013-05-21:solucionar-cuelgue-de-eclipse-en-ubuntu-1304-al-mostrar-una-sugerencia-de-autocompletado.html</id><summary type="html">&lt;p&gt;Para lo bueno y para lo malo Eclipse no deja de sorprenderme, y la última
sorpresa no ha sido agradable. En Ubuntu 13.04 de 64 bits, Eclipse 4.2 se
cuelga justo después de mostrar cualquier sugerencia de autocompletado de
código.&lt;/p&gt;
&lt;p&gt;El error está reportado en Eclipse (&lt;a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=406736"&gt;#406763&lt;/a&gt;) y en Ubuntu
(&lt;a href="https://bugs.launchpad.net/ubuntu/+source/eclipse/+bug/988646"&gt;#988646&lt;/a&gt;), pero en ninguno de estos sitios se describe un &lt;em&gt;workarond&lt;/em&gt;.
Afortunadamente encontré una solución (para variar) en un artículo de
Stackoverflow titulado &lt;a href="http://stackoverflow.com/questions/16383992/why-does-my-eclipse-indigo-crashes-on-ubuntu-13-04-with-oracle-jdk-64bit"&gt;Why does my Eclipse Indigo crashes on Ubuntu 13.04 with
Oracle JDK 64bit?&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este &lt;em&gt;workaround&lt;/em&gt; consiste simplemente en añadir al final del fichero
&lt;code&gt;eclipse.ini&lt;/code&gt; la siguiente línea:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;-Dorg.eclipse.swt.browser.DefaultType=mozilla
&lt;/pre&gt;&lt;/div&gt;</summary><category term="eclipse"></category><category term="linux"></category><category term="ubuntu"></category><category term="wtf"></category></entry><entry><title>Solucionar problemas gráficos en Eclipse bajo GNU/Linux</title><link href="/solucionar-problemas-graficos-en-eclipse-bajo-gnulinux.html" rel="alternate"></link><updated>2012-08-01T00:00:00+02:00</updated><author><name>david</name></author><id>tag:,2012-08-01:solucionar-problemas-graficos-en-eclipse-bajo-gnulinux.html</id><summary type="html">&lt;p&gt;Aunque &lt;a href="http://www.eclipse.org"&gt;Eclipse&lt;/a&gt; es una plataforma de desarrollo multiplataforma, no es un
secreto que MS Windows ha sido hasta ahora la plataforma mejor soportada.
La versión de Eclipse para Mac OS X ha ido mejorando versión a versión, sobre
todo desde la publicación de &lt;a href="http://www.eclipse.org/juno"&gt;Eclipse 4.2 (Juno)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aunque completamente funcional, el soporte de Eclipse para GNU/Linux no está a
la altura quei en el resto de plataformas. Un ejemplo es el bug &lt;a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=368543"&gt;#368543&lt;/a&gt;,
en el que se describen problemas gráficos con &lt;a href="http://www.eclipse.org/windowbuilder/"&gt;WindowBuilder&lt;/a&gt; bajo
GNU/Linux. Estes mismos problemas los tiene el &lt;a href="https://twitter.com/vogella/"&gt;plugin ADT&lt;/a&gt; de Google (que
al fin y al cabo utiliza el mismo editor gráfico que WindowBuilder).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/vogella/"&gt;Lars Vogel&lt;/a&gt; propone un &lt;a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=368543#c17"&gt;workaround&lt;/a&gt; a este problema, que consiste en
forzar a SWT a no utilizar &lt;a href="http://cairographics.org/"&gt;Cairo&lt;/a&gt;. En mi caso, utilizo un script que
además desactiva las &lt;a href="https://launchpad.net/ayatana-scrollbar/"&gt;overlay scrollbars&lt;/a&gt; de Ubuntu, que tampoco parecen
terminar de funcionar bien en Eclipse:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;GDK_NATIVE_WINDOWS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LIBOVERLAY_SCROLLBAR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0

&lt;span class="nv"&gt;ECLIPSE_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$( cd &amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; dirname &lt;span class="s2"&gt;&amp;quot;${BASH_SOURCE[0]}&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;amp;&amp;amp; pwd )&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ECLIPSE_DIR&lt;/span&gt;/eclipse -Dorg.eclipse.swt.internal.gtk.cairoGraphics&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -Dorg.eclipse.swt.internal.gtk.useCairo&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="eclipse"></category><category term="linux"></category><category term="windowbuilder"></category><category term="android"></category></entry><entry><title>(Otra) expresión regular para extraer URLs</title><link href="/otra-expresion-regular-para-extraer-urls.html" rel="alternate"></link><updated>2012-06-18T00:00:00+02:00</updated><author><name>david</name></author><id>tag:,2012-06-18:otra-expresion-regular-para-extraer-urls.html</id><summary type="html">&lt;p&gt;Escribir una expresión regular que extraiga URLs de un texto arbitrario no es
una tarea sencilla, la prueba es que existen en Internet literalmente cientos
de aproximaciones que abordan el problema con más o menos éxito.&lt;/p&gt;
&lt;p&gt;Hay que tener en cuenta que &lt;a href="http://www.codinghorror.com/blog/2008/10/the-problem-with-urls.html"&gt;no es posible detectar &lt;em&gt;cualquier&lt;/em&gt;
URL en un texto arbitrario&lt;/a&gt;, puesto que el espacio es un carácter admitido en
las URLs. Después de dedicar bastante tiempo a buscar en Internet, la
aproximación que más me gustó es la realizada por &lt;a href="http://daringfireball.net/"&gt;John Gruber&lt;/a&gt;, creador de
&lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;, en el artículo &lt;a href="http://daringfireball.net/2010/07/improved_regex_for_matching_urls"&gt;An Improved Liberal, Accurate Regex Pattern for
Matching URLs&lt;/a&gt;. Propone  una expresión regular muy interesante porque aborda
el problema de URLs con parejas de paréntesis, común en ciertos sitios como la
Wikipedia.  Aunque su expresión regular reconoce correctamente la inmensa
mayoría de URLs,
requiere que después del dominio superior (&lt;em&gt;Top Level Domain&lt;/em&gt;, o &lt;abbr title="Top Level Domain"&gt;TLD&lt;/abbr&gt;) de la URL
tenga una barra invertida después del dominio. Por ejemplo
&lt;a href="http://t.co/"&gt;t.co/&lt;/a&gt; se reconoce correctamente, pero &lt;a href="http://t.co"&gt;t.co&lt;/a&gt; no.&lt;/p&gt;
&lt;p&gt;Afortunadamente Jesús González (Chuso), un compañero de Escritorio Movistar
para la plataforma Windows, había tenido el mismo problema y había escrito una
expresión regular que no tiene este problema:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# Capture entire matched URL
(
    # Optional: only allow some network protocols
    # URL protocol and a colon followed by 2 slashes
    (?:
        (?:
            http|https|ftp
        ):\\/\\/
    )?

    # Check if it is the beginning of a word
    (?&amp;lt;=\\b)

    # The URL must not start with the character &amp;#39;@&amp;#39;
    (?&amp;lt;!\\@)

    # The domain name must begin with a valid character
    (?:[\w\d]

        # Other characters allowed in the domain
        (?:[\w\dñÑ()+,-.:=;$_!*&amp;#39;%?#])*
    )

    # A recognized domain is required
    \\.
    (?:
        aero|arpa|asia|biz|cat|com|coop|edu|gov|inet|info|int|jobs|mil|
        mobi|museum|name|net|org|pro|tel|travel|xxx|ac|ad|ae|af|ag|ai|
        al|am|an|ao|aq|ar|as|at|au|aw|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|
        bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|
        cv|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|
        fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|
        hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|
        km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|
        mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|
        ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|
        py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|
        st|su|sv|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|
        ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw
    )

    # Optional: Port number
    (?::[0-9]+)?

    # Characters allowed in a URL according to RF1738
    (?:
        \\/[\w\d()+,-.:=@;$_!*&amp;#39;%?#&amp;amp;|\\\\]*
    )*

    # Check if we have consumed all characters allowed in a URL
    (?![\w\d()+,-./:=@;$_!*&amp;#39;%?#&amp;amp;|\\\\])
)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esta expresión debe compilarse con los flags &lt;code&gt;re.IGNORECASE&lt;/code&gt; y &lt;code&gt;re.VERBOSE&lt;/code&gt; del
&lt;a href="http://docs.python.org/library/re.html"&gt;módulo re&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Además de detectar las URLs cortas del tipo &lt;a href="t.co"&gt;t.co&lt;/a&gt;, sólo hace
&lt;em&gt;matching&lt;/em&gt; si el &lt;abbr title="Top Level Domain"&gt;TLD&lt;/abbr&gt; de la URL es válido. Sin embargo, tiene la desventaja de
que si en un futuro cambiara la &lt;a href="http://en.wikipedia.org/wiki/List_of_Internet_top-level_domains"&gt;lista de dominios superiores&lt;/a&gt;, sería
necesario actualizar la expresión regular.&lt;/p&gt;</summary><category term="regex"></category><category term="web"></category><category term="python"></category></entry><entry><title>Control de concurrencia usando D-Bus</title><link href="/control-de-concurrencia-usando-d-bus.html" rel="alternate"></link><updated>2012-05-04T00:00:00+02:00</updated><author><name>david</name></author><id>tag:,2012-05-04:control-de-concurrencia-usando-d-bus.html</id><summary type="html">&lt;p&gt;Un problema frecuente es cómo impedir que un programa se ejecute dos o más
veces de forma concurrente. Uno de los mecanismos más utilizados para afrontar
este problema es el conocido como &lt;a href="http://en.wikipedia.org/wiki/File_locking"&gt;file locking&lt;/a&gt;. En un proyecto hemos
utilizado &lt;a href="http://en.wikipedia.org/wiki/DBus"&gt;D-Bus&lt;/a&gt; para implementar un mecanismo similar.&lt;/p&gt;
&lt;p&gt;D-Bus es un sistema de bus de mensajes, una forma sencilla para que las
aplicaciones se comuniquen entre sí. De forma muy resumida (más información en
la web del &lt;a href="http://www.freedesktop.org/wiki/Software/dbus"&gt;proyecto D-Bus&lt;/a&gt;), cuando un usuario inicia una sesión gráfica en
el sistema tiene a su disposición un bus del sistema y un bus del usuario
ligado a su sesión. Un programa en ejecución se puede registrar en uno de estos
buses para ofrecer uno o más servicios, identificados unívocamente con un
identificador asignado por D-Bus (p.e. &lt;code&gt;:34-907&lt;/code&gt;) y un nombre &lt;em&gt;conocido&lt;/em&gt;
elegido por el programa (p.e. &lt;code&gt;es.foo.Bar&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Puesto que sólo puede haber un único servicio en un bus con el mismo nombre, es
sencillo idear un mecanismo de control de concurrencia. Consistiría básicamente
en consultar si existe un servicio en el bus de sesión con un determinado
nombre. Un ejemplo sencillo implementado en Python es el siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# dbus-singleton-example.py&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gobject&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dbus&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dbus.mainloop.glib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dbus.service&lt;/span&gt;

&lt;span class="n"&gt;BUS_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;es.foo.Bar&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DBusSingleton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SessionBus&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name_has_owner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BUS_NAME&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BUS_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/es/foo/bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Adquired D-Bus name: &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;BUS_NAME&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Failed to request D-Bus name: &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;BUS_NAME&lt;/span&gt;
            &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DBusGMainLoop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;set_as_default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;singleton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DBusSingleton&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gobject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MainLoop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Al ejecutarlo de forma concurrente &lt;em&gt;n&lt;/em&gt; veces se obtiene la salida:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="k"&gt;for &lt;/span&gt;i in &lt;span class="o"&gt;{&lt;/span&gt;1..5&lt;span class="o"&gt;}&lt;/span&gt;; &lt;span class="k"&gt;do &lt;/span&gt;python dbus-concurrenty-example.py &amp;amp; &lt;span class="k"&gt;done&lt;/span&gt;
Adquired D-Bus name: &lt;span class="s2"&gt;&amp;quot;es.foo.Bar&amp;quot;&lt;/span&gt;
Failed to request D-Bus name: &lt;span class="s2"&gt;&amp;quot;es.foo.Bar&amp;quot;&lt;/span&gt;
Failed to request D-Bus name: &lt;span class="s2"&gt;&amp;quot;es.foo.Bar&amp;quot;&lt;/span&gt;
Failed to request D-Bus name: &lt;span class="s2"&gt;&amp;quot;es.foo.Bar&amp;quot;&lt;/span&gt;
Failed to request D-Bus name: &lt;span class="s2"&gt;&amp;quot;es.foo.Bar&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="dbus"></category><category term="concurrencia"></category></entry><entry><title>Oracle JDK y Google Chrome en Ubuntu 12.04 LTS</title><link href="/oracle-jdk-y-google-chrome-en-ubuntu-1204-lts.html" rel="alternate"></link><updated>2012-04-30T00:00:00+02:00</updated><author><name>david</name></author><id>tag:,2012-04-30:oracle-jdk-y-google-chrome-en-ubuntu-1204-lts.html</id><summary type="html">&lt;p&gt;A menudo utilizo &lt;em&gt;Juniper Network Connect&lt;/em&gt; para conectar a la intranet
corporativa del trabajo. Es un applet de Java que, al menos en mi caso, no
funciona bien con &lt;a href="http://openjdk.java.net"&gt;OpenJDK&lt;/a&gt; y sólo funciona con &lt;a href="http://www.java.com"&gt;Oracle JVM&lt;/a&gt; (la
anteriormente conocida como Sun JVM). En agosto del 2011, &lt;a href="https://lists.ubuntu.com/archives/ubuntu-security-announce/2011-December/001528.html"&gt;Canonical dejó de
tener permiso para distribuir la JVM de Sun&lt;/a&gt;. Aunque existen algunos PPAs
mantenidos por miembros de la comunidad de Ubuntu que ofrecen paquetes DEB del
Oracle JVM, suelen ser versiones demasiado antiguas y con problemas de
seguridad.&lt;/p&gt;
&lt;p&gt;Aunque hay disponible un instalador oficial en la &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html"&gt;sección de descargas de
Oracle para Java&lt;/a&gt;, suele ser mejor opción utilizar el script &lt;code&gt;make-jpkg&lt;/code&gt;
para crear un paquete Debian. Este script está empaquetado para Debian en el
paquete &lt;a href="http://packages.debian.org/java-package"&gt;java-package&lt;/a&gt;, y recientemente ha sido actualizado a la versión
0.50 que tiene como novedad el soporte para Java 7.&lt;/p&gt;
&lt;p&gt;Sólo he encontrado un problema con estos paquetes, y es que no instalan el
plugin de Java en el navegador Google Chrome, sin embargo si lo hace para
Iceweasel y Chromium. Es problema es muy sencillo de resolver, sólo es
necesario crear un enlace simbólico al fichero &lt;code&gt;libnpjp2.so&lt;/code&gt; que se encuentra
en el JRE. Utilizando el &lt;a href="http://www.debian-administration.org/articles/91"&gt;sistema de alternatives de Debian&lt;/a&gt; se haría de la
siguiente manera:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ sudo update-alternatives --install \
&amp;gt; /usr/lib/mozilla/plugins/libjavaplugin.so \
&amp;gt; mozilla-javaplugin.so \
&amp;gt; /usr/lib/jvm/j2sdk1.6-oracle/jre/lib/i386/libnpjp2.so 100
&lt;/pre&gt;&lt;/div&gt;</summary><category term="java"></category><category term="ubuntu"></category><category term="alternatives"></category></entry><entry><title>Extraer cadenas de un fichero .ui de gtk-builder con intltool</title><link href="/extraer-cadenas-de-un-fichero-ui-de-gtk-builder-con-intltool.html" rel="alternate"></link><updated>2012-04-26T00:00:00+02:00</updated><author><name>david</name></author><id>tag:,2012-04-26:extraer-cadenas-de-un-fichero-ui-de-gtk-builder-con-intltool.html</id><summary type="html">&lt;p&gt;Tenemos entre manos un proyecto en el que utilizamos Glade para la creación de
la interfaz de usuario; es muy cómodo porque crea una serie de ficheros XML que
describen la UI del programa, en lugar de crearla programáticamente. Hasta ahora
usábamos &lt;code&gt;libglade&lt;/code&gt; para cargar estos ficheros, pero como esta librería &lt;a href="http://mail.gnome.org/archives/devel-announce-list/2009-May/msg00003.html"&gt;está
deprecada desde el año 2009&lt;/a&gt;, estamos trabajando en reemplazarla con
&lt;code&gt;gtk-builder&lt;/code&gt; del proyecto GTK.&lt;/p&gt;
&lt;p&gt;Es un proceso aburrido y tedioso más que difícil, pero nos hemos encontrado con
un pequeño problema. Estamos usando Autotools en el proyecto, e &lt;code&gt;intltool&lt;/code&gt; no
es capaz de extraer cadenas de los ficheros con extensión &lt;code&gt;.ui&lt;/code&gt; de
&lt;code&gt;gtk-builder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La solución para este problema es sencilla y la encontramos en un documento
llamado &lt;a href="http://live.gnome.org/GnomeGoals/RemoveLibGladeUseGtkBuilder"&gt;GNOME Goal: Use GtkBuilder instead of libglade&lt;/a&gt;. Consiste en
indicar a &lt;code&gt;intltool&lt;/code&gt; que estos ficheros son de tipo &lt;code&gt;gettext/glade&lt;/code&gt;. Basta con
editar el fichero &lt;code&gt;POTFILES.in&lt;/code&gt; y añadir un prefijo a cada una de las líneas
donde aparezca un fichero &lt;code&gt;.ui&lt;/code&gt; de la siguiente manera:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[type: gettext/glade]data/preferences.ui
&lt;/pre&gt;&lt;/div&gt;</summary><category term="gtk"></category><category term="autotools"></category><category term="intltool"></category></entry><entry><title>hello world!</title><link href="/hello-world.html" rel="alternate"></link><updated>2012-04-22T00:00:00+02:00</updated><author><name>david</name></author><id>tag:,2012-04-22:hello-world.html</id><summary type="html">&lt;p&gt;Quizá sea por deformación profesional, vaguería, o una falta (puntual) de
imaginación, no se me ocurre una mejor forma de comenzar este lío que con un
estupendo &lt;em&gt;Hello World!&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;El objetivo de este blog es muy humilde: continuamente estoy aprendiendo cosas,
y continuamente estoy olvidando cosas. Y como soy vago, me fastidia sobremanera
tener que volver a aprenderlas. Normalmente cuando me quejo de todo esto me
suelen regañar con un  "deberías haberlo apuntado en algún sitio".&lt;/p&gt;
&lt;p&gt;Así que ya
tengo la motivación que necesitaba: voy a escribir sobre cosas de mi trabajo
que &lt;em&gt;sé&lt;/em&gt; que voy a olvidar y que muy posiblemente vaya a necesitar en un
futuro. Y si de paso resulta que es útil a alguien, perfecto. Imagino que la
mayoría de las entradas de este blog serán sobre computación y
programación en general, y sobre Python en particular. Entre mis intereses se
encuentran temas como el toolkit GTK, Eclipse (tanto el IDE como la
plataforma), Java, Android, Git, etc.&lt;/p&gt;</summary><category term="me"></category></entry></feed>